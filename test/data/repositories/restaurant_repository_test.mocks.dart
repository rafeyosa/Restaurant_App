// Mocks generated by Mockito 5.2.0 from annotations
// in restaurant_app/test/data/repositories/restaurant_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i6;

import 'package:mockito/mockito.dart' as _i1;
import 'package:restaurant_app/data/models/add_review.dart' as _i9;
import 'package:restaurant_app/data/models/customer_review.dart' as _i8;
import 'package:restaurant_app/data/models/restaurant.dart' as _i7;
import 'package:restaurant_app/data/models/restaurant_detail.dart' as _i4;
import 'package:restaurant_app/data/services/restaurant_api.dart' as _i2;
import 'package:restaurant_app/data/services/restaurant_database.dart' as _i3;

import 'restaurant_repository_test.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeRestaurantApi_0 extends _i1.Fake implements _i2.RestaurantApi {}

class _FakeRestaurantDatabase_1 extends _i1.Fake
    implements _i3.RestaurantDatabase {}

class _FakeRestaurantDetail_2 extends _i1.Fake implements _i4.RestaurantDetail {
}

/// A class which mocks [RestaurantRepositoryTest].
///
/// See the documentation for Mockito's code generation for more information.
class MockRestaurantRepositoryTest extends _i1.Mock
    implements _i5.RestaurantRepositoryTest {
  MockRestaurantRepositoryTest() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.RestaurantApi get restaurantApi =>
      (super.noSuchMethod(Invocation.getter(#restaurantApi),
          returnValue: _FakeRestaurantApi_0()) as _i2.RestaurantApi);
  @override
  _i3.RestaurantDatabase get restaurantDatabase =>
      (super.noSuchMethod(Invocation.getter(#restaurantDatabase),
          returnValue: _FakeRestaurantDatabase_1()) as _i3.RestaurantDatabase);
  @override
  _i6.Future<List<_i7.Restaurant>> fetchRestaurants() => (super.noSuchMethod(
          Invocation.method(#fetchRestaurants, []),
          returnValue: Future<List<_i7.Restaurant>>.value(<_i7.Restaurant>[]))
      as _i6.Future<List<_i7.Restaurant>>);
  @override
  _i6.Future<_i4.RestaurantDetail> getRestaurantDetail(String? id) =>
      (super.noSuchMethod(Invocation.method(#getRestaurantDetail, [id]),
              returnValue:
                  Future<_i4.RestaurantDetail>.value(_FakeRestaurantDetail_2()))
          as _i6.Future<_i4.RestaurantDetail>);
  @override
  _i6.Future<List<_i7.Restaurant>> searchRestaurants(String? search) =>
      (super.noSuchMethod(Invocation.method(#searchRestaurants, [search]),
              returnValue:
                  Future<List<_i7.Restaurant>>.value(<_i7.Restaurant>[]))
          as _i6.Future<List<_i7.Restaurant>>);
  @override
  _i6.Future<List<_i8.CustomerReview>> addReview(_i9.AddReview? review) =>
      (super.noSuchMethod(Invocation.method(#addReview, [review]),
          returnValue: Future<List<_i8.CustomerReview>>.value(
              <_i8.CustomerReview>[])) as _i6.Future<List<_i8.CustomerReview>>);
  @override
  _i6.Future<void> addRestaurantFavorite(_i7.Restaurant? restaurant) => (super
      .noSuchMethod(Invocation.method(#addRestaurantFavorite, [restaurant]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<List<_i7.Restaurant>> getRestaurantFavoriteList() =>
      (super.noSuchMethod(Invocation.method(#getRestaurantFavoriteList, []),
              returnValue:
                  Future<List<_i7.Restaurant>>.value(<_i7.Restaurant>[]))
          as _i6.Future<List<_i7.Restaurant>>);
  @override
  _i6.Future<bool> isRestaurantFavorite(String? id) =>
      (super.noSuchMethod(Invocation.method(#isRestaurantFavorite, [id]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
  @override
  _i6.Future<void> removeRestaurantFavorite(String? id) =>
      (super.noSuchMethod(Invocation.method(#removeRestaurantFavorite, [id]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<void> setPreferenceBoolean(String? keyStr, bool? value) => (super
      .noSuchMethod(Invocation.method(#setPreferenceBoolean, [keyStr, value]),
          returnValue: Future<void>.value(),
          returnValueForMissingStub: Future<void>.value()) as _i6.Future<void>);
  @override
  _i6.Future<bool> getPreferenceBoolean(String? keyStr) =>
      (super.noSuchMethod(Invocation.method(#getPreferenceBoolean, [keyStr]),
          returnValue: Future<bool>.value(false)) as _i6.Future<bool>);
}
